data:
  base: null
  name: test_camvid
  #function_name: camvid
  #path: ./dataset/camvid
  function_name: custom
  path: ./dataset/test_data
  classes: ["Rood", "Sky"]
  palette: [[128, 64, 128], [128, 128, 128]]
  output_type: ["tf.float32", "tf.float32"]
  channels: [3, 3]
  one_hot_encoding: true
  background_adding: true
  image_size: [512, 512]
  normalizing: true
  batch_size: 8
  #test_batch_size: 32
  seed: 48
  create_validation_set: false

augmentation:
  base: ./config/_base/aug_module.yaml #aug_file.yaml # in futere .py
  load_style: module # {module, file} # it find automatically
  aug_type: albumentations
  train:
    path: tf_seg.transformers.albumentations:get_train_transform
    parameters: { image_size: [512, 512], p: 0.5 }
  val:
    path: tf_seg.transformers.albumentations:get_test_transform
    parameters: { image_size: [512, 512] }
  test:
    path: #tf_seg.transformers.albumentations:get_test_transform
    parameters: { image_size: [512, 512] }

model:
  base: null
  name: test_unet # custom model name
  class_name: Unet to make model
  backbone: null
  pretrained: false
  n_filters: [16, 32, 64, 128, 256]
  output_size: 3
  final_activation: softmax

trainer:
  base: null
  optimizer: { name: adam, params: { learning_rate: 0.001 } }
  metrics: [accuracy]
  losses: [categorical_crossentropy]
  epochs: 20
  batch_size: 32
  verbose: 1
  deploy_onnx: false

callbacks:
  base: null
  checkpoint:
    class_name: ModelCheckpoint 
    params:
      save_best_only: True
      monitor: val_loss
      verbose: 1
      filepath: checkpoints/{epoch:02d}-{val_loss:.2f}.hdf5
  scheduler:
    class_name: LearningRateScheduler
    sc_name: PolynomialDecay # scheduler class name
    params:
      initial_learning_rate: 0.1
      end_learning_rate: 0.0001
      decay_steps: 100
      power: 1.0
  tensorboard:
    class_name: TensorBoard
    params: { log_dir: "logs" }
  measure_total_time: # custom callback
    class_name: MeasureTotalTime
    params: {}
